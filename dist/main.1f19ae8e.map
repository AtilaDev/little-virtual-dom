{"version":3,"sources":["vdom/createElement.js","vdom/render.js","vdom/mount.js","main.js"],"names":["tagName","attrs","children","vElem","Object","create","assign","renderElem","$el","document","createElement","entries","k","v","setAttribute","child","appendChild","render","vNode","createTextNode","$node","$target","replaceWith","createVApp","count","id","dataCount","String","src","vApp","$app","$rootEl","getElementById","setInterval"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAe,kBAACA,OAAD,EAAiD;AAAA,iFAAP,EAAO;AAAA,wBAArCC,KAAqC;AAAA,MAArCA,KAAqC,2BAA7B,EAA6B;AAAA,2BAAzBC,QAAyB;AAAA,MAAzBA,QAAyB,8BAAd,EAAc;;AAC9D,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAd;AAEAD,EAAAA,MAAM,CAACE,MAAP,CAAcH,KAAd,EAAqB;AACnBH,IAAAA,OAAO,EAAPA,OADmB;AAEnBC,IAAAA,KAAK,EAALA,KAFmB;AAGnBC,IAAAA,QAAQ,EAARA;AAHmB,GAArB;AAMA,SAAOC,KAAP;AACD;;;;;;;;;;;;;;;;;;;ACVD,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAkC;AAAA,MAA/BP,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACnD,MAAMM,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuBV,OAAvB,CAAZ;;AADmD,aAG9BI,MAAM,CAACO,OAAP,CAAeV,KAAf,CAH8B;;AAGnD,2CAA4C;AAAA;AAAA,QAAhCW,CAAgC;AAAA,QAA7BC,CAA6B;;AAC1CL,IAAAA,GAAG,CAACM,YAAJ,CAAiBF,CAAjB,EAAoBC,CAApB;AACD;;AALkD;AAAA;AAAA;;AAAA;AAOnD,yBAAoBX,QAApB,8HAA8B;AAAA,UAAnBa,KAAmB;AAC5BP,MAAAA,GAAG,CAACQ,WAAJ,CAAgBC,MAAM,CAACF,KAAD,CAAtB;AACD;AATkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWnD,SAAOP,GAAP;AACD,CAZD;;AAcA,IAAMS,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AACtB,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOT,QAAQ,CAACU,cAAT,CAAwBD,KAAxB,CAAP;AACD;;AAED,SAAOX,UAAU,CAACW,KAAD,CAAjB;AACD,CAND;;eAQeD,QAEf;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;eCtCe,kBAACG,KAAD,EAAQC,OAAR,EAAoB;AACjCA,EAAAA,OAAO,CAACC,WAAR,CAAoBF,KAApB;AACA,SAAOA,KAAP;AACD;;;;;;ACHD;;AACA;;AACA;;;;AAEA,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAC,KAAK;AAAA,SACtB,4BAAc,KAAd,EAAqB;AACnBvB,IAAAA,KAAK,EAAE;AACLwB,MAAAA,EAAE,EAAE,KADC;AAELC,MAAAA,SAAS,EAAEF;AAFN,KADY;AAKnBtB,IAAAA,QAAQ,EAAE,CACR,wBADQ,EAERyB,MAAM,CAACH,KAAD,CAFE,EAGR,4BAAc,KAAd,EAAqB;AACnBvB,MAAAA,KAAK,EAAE;AACL2B,QAAAA,GAAG,EAAE;AADA;AADY,KAArB,CAHQ;AALS,GAArB,CADsB;AAAA,CAAxB;;AAiBA,IAAIJ,KAAK,GAAG,CAAZ;AACA,IAAMK,IAAI,GAAGN,UAAU,CAACC,KAAD,CAAvB;AACA,IAAMM,IAAI,GAAG,qBAAOD,IAAP,CAAb;AACA,IAAIE,OAAO,GAAG,oBAAMD,IAAN,EAAYrB,QAAQ,CAACuB,cAAT,CAAwB,KAAxB,CAAZ,CAAd;AAEAC,WAAW,CAAC,YAAM;AAChBT,EAAAA,KAAK;AACLO,EAAAA,OAAO,GAAG,oBAAM,qBAAOR,UAAU,CAACC,KAAD,CAAjB,CAAN,EAAiCO,OAAjC,CAAV;AACD,CAHU,EAGR,IAHQ,CAAX","file":"main.1f19ae8e.map","sourceRoot":"../src","sourcesContent":["export default (tagName, { attrs = {}, children = [] } = {}) => {\n  const vElem = Object.create(null);\n\n  Object.assign(vElem, {\n    tagName,\n    attrs,\n    children\n  });\n\n  return vElem;\n};\n","const renderElem = ({ tagName, attrs, children }) => {\n  const $el = document.createElement(tagName);\n\n  for (const [k, v] of Object.entries(attrs)) {\n    $el.setAttribute(k, v);\n  }\n\n  for (const child of children) {\n    $el.appendChild(render(child));\n  }\n\n  return $el;\n};\n\nconst render = vNode => {\n  if (typeof vNode === 'string') {\n    return document.createTextNode(vNode);\n  }\n\n  return renderElem(vNode);\n};\n\nexport default render;\n\n// const render = vNode => {\n//   const $el = document.createElement(vNode.tagName);\n\n//   for (const [k, v] of Object.entries(vNode.attrs)) {\n//     $el.setAttribute(k, v);\n//   }\n\n//   for (const child of vNode.children) {\n//     $el.appendChild(render(child));\n//   }\n\n//   return $el;\n// };\n\n// export default render;\n","export default ($node, $target) => {\n  $target.replaceWith($node);\n  return $node;\n};\n","import createElement from './vdom/createElement';\nimport render from './vdom/render';\nimport mount from './vdom/mount';\n\nconst createVApp = count =>\n  createElement('div', {\n    attrs: {\n      id: 'app',\n      dataCount: count\n    },\n    children: [\n      'The current count is: ',\n      String(count),\n      createElement('img', {\n        attrs: {\n          src: 'https://media.giphy.com/media/wW95fEq09hOI8/giphy.gif'\n        }\n      })\n    ]\n  });\n\nlet count = 0;\nconst vApp = createVApp(count);\nconst $app = render(vApp);\nlet $rootEl = mount($app, document.getElementById('app'));\n\nsetInterval(() => {\n  count++;\n  $rootEl = mount(render(createVApp(count)), $rootEl);\n}, 1000);\n"]}